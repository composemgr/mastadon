# nginx proxy address - https://172.17.0.1:59038

name: mastodon
x-logging: &default-logging
  options:
    max-size: '5m'
    max-file: '1'
  driver: json-file

services:
  web:
    image: lscr.io/linuxserver/mastodon:latest
    container_name: mastodon-web
    hostname: ${BASE_HOST_NAME:-$HOSTNAME}
    restart: always
    pull_policy: always
    logging: *default-logging
    environment:
      - TZ=${TZ:-America/New_York}
      - WEB_DOMAIN=${BASE_HOST_NAME:-$HOSTNAME}
      - LOCAL_DOMAIN=${BASE_HOST_NAME:-$HOSTNAME}
      - OTP_SECRET=${OTP_SECRET:-Kw6QTR4wuyqyJ7dUyg81N7s8EvksmDlu}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-EKUaB9LeLn433co2fVSF5pQj4nWDKIWm}
      - ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=${ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY:-OJTGYuCw5t1BEIqpAtrnK9HTUQ9jZ1QV}
      - ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=${ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT:-bhBhkXghpAEDioU6kefAT1zG4yy6Rwyp}
      - ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=${ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY:-X1nyDm6OkDJlwu6TzQ5e137G5oiQXDqc}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY:-GoV9Q8Uye3f_zJS36CoiJE1DQp4yPRN0MfIkWO5Zxrk=}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY:-BBEyKQxFj_haRQsH4eD_4XjvxuU3yjIIRQXysowVNdP22AVnGoP2gZ6KJJmksa80cQ1HhvzwtVx76ghG1yBolB8=}
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
      - DB_POOL=5
      - NO_CHOWN=false
      - SMTP_SERVER=${EMAIL_SERVER_HOST:-172.17.0.1}
      - SMTP_PORT=${EMAIL_SERVER_PORT:-25}
      - SMTP_FROM_ADDRESS=no-reply@${BASE_HOST_NAME:-$HOSTNAME}
      - SMTP_LOGIN=${EMAIL_SERVER_LOGIN_NAME:-}
      - SMTP_PASSWORD=${EMAIL_SERVER_LOGIN_PASS:-}
      - S3_ENABLED=false
      - S3_BUCKET=
      - S3_ALIAS_HOST=
      - REDIS_HOST=mastodon-redis
      - REDIS_PORT=6379
      - DB_USER=mastodon
      - DB_NAME=mastodon
      - DB_HOST=mastodon-db
      - DB_PASS=tUiQWxResrK0nH3shpyTMpUHlKiaQTOx
      - DB_PORT=5432
      - ES_ENABLED=false
      - ES_HOST=mastodon-elastic
      - ES_PORT=9200
      - ES_USER=elastic
      - ES_PASS=elastic
      - SIDEKIQ_ONLY=false
      - SIDEKIQ_QUEUE=
      - SIDEKIQ_DEFAULT=false
      - SIDEKIQ_THREADS=5
    volumes:
      - './rootfs/data/mastodon:/data'
      - './rootfs/config/mastodon:/config'
    ports:
      - '172.17.0.1:59038:80'
    networks:
      - mastodon

  streaming:
    image: ghcr.io/mastodon/mastodon-streaming:latest
    container_name: mastodon-streaming
    hostname: mastodon-streaming
    restart: always
    pull_policy: always
    command: node ./streaming/index.js
    logging: *default-logging
    environment:
      - TZ=${TZ:-America/New_York}
      - REDIS_HOST=mastodon-redis
      - REDIS_PORT=6379
      - DB_USER=mastodon
      - DB_NAME=mastodon
      - DB_HOST=mastodon-db
      - DB_PASS=tUiQWxResrK0nH3shpyTMpUHlKiaQTOx
      - DB_PORT=5432
      - ES_ENABLED=false
      - ES_USER=elastic
      - ES_HOST=mastodon-elastic
      - ES_PASS=elastic
      - ES_PORT=9200
    depends_on:
      - db
      - web
      - redis
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl -q -LSsf http://localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1",
        ]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    networks:
      - mastodon

  db:
    image: postgres:14-alpine
    container_name: mastodon-db
    hostname: mastodon-db
    restart: always
    pull_policy: always
    logging: *default-logging
    environment:
      - TZ=${TZ:-America/New_York}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=mastodon
      - POSTGRES_PASSWORD=tUiQWxResrK0nH3shpyTMpUHlKiaQTOx
    volumes:
      - './rootfs/db/postgres:/var/lib/postgresql/data'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '$$POSTGRES_USER']
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    networks:
      - mastodon

  redis:
    image: redis:7-alpine
    container_name: mastodon-redis
    hostname: mastodon-redis
    restart: always
    pull_policy: always
    logging: *default-logging
    environment:
      - TZ=${TZ:-America/New_York}
    volumes:
      - './rootfs/db/redis:/data'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    networks:
      - mastodon

networks:
  mastodon:
    name: mastodon
    external: false
